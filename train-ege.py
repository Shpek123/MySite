import random, os, platform, time

class InvalidChoiceError(Exception):
    pass


class screen:
    @staticmethod
    def clear():
        os.system('cls' if platform.system() == 'Windows' else 'clear')

    @staticmethod
    def header(name):
        screen.clear()
        print('\n'+'='*30)
        print(name.center(30))
        print('='*30)

    @staticmethod
    def footer():
        print('='*30)

class menu:
    def __init__(self):
        self.menu_stress = menu_StressGame()
        self.endless_streak = 0
        self.time_streak = 0

    def menu(self):
        while True:
            screen.header('–¢–†–ï–ù–ê–ñ–ï–†–´ –ï–ì–≠')
            print('1. –£–¥–∞—Ä–µ–Ω–∏—è')
            print('0. –í—ã—Ö–æ–¥')
            screen.footer()
            choice = input('> ')

            if choice == '1':
                self.menu_stress.menu_stress_game()
            elif choice == '0':
                return
            else:
                screen.clear()
                print('–û–®–ò–ë–ö–ê: –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (0 - 2)')
                input('–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...')

class stat_game:
    def __init__(self):
        self.stress_game = StressGame()

    def menu_stat_game(self):
        while True:
            screen.header('–°–¢–ê–¢–ò–°–¢–ò–ö–ê')
            print(f'|–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ä–µ–∂–∏–º: {endless_streak}')
            print(f'|–ù–∞ –≤—Ä–µ–º—è (30c): {time_streak}')
            screen.footer()
            input("–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è...")
            return
class menu_StressGame:
    def __init__(self):
        self.stress_game = StressGame()

    def menu_stress_game(self):
        while True:  # –î–æ–±–∞–≤–ª—è–µ–º —Ü–∏–∫–ª –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ —ç—Ç–æ –º–µ–Ω—é
            screen.header('–†–ï–ñ–ò–ú–´ –£–î–ê–†–ï–ù–ò–Ø')
            print('1. –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ä–µ–∂–∏–º')
            print('2. –†–∞–±–æ—Ç–∞ –Ω–∞–¥ –æ—à–∏–±–∫–∞–º–∏')
            print('3. –ù–∞ –≤—Ä–µ–º—è')
            print('0. –ù–∞–∑–∞–¥')  # –ò–∑–º–µ–Ω—è–µ–º –Ω–∞ 0 –¥–ª—è consistency
            screen.footer()
            choice = input('> ')

            if choice == '1':
                self.stress_game.endless_game()
            elif choice == '2':
                self.stress_game.error_work()
            elif choice == '3':
                self.stress_game.time_game()
            elif choice == '0':
                return  # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é


class StressGame:
    def __init__(self):
        self.words = {
    '–∞–≥—Ä–æ–Ω–û–º–∏—è': '–∞–≥—Ä–æ–Ω–æ–º–ò—è',
    '–∞–∫—Ä–û–ø–æ–ª—å': '–∞–∫—Ä–æ–ø–û–ª—å',
    '–∞–ª–∫–æ–≥–û–ª—å': '–∞–ª–∫–û–≥–æ–ª—å',
    '–∞–ª—Ñ–∞–≤–ò—Ç': '–∞–ª—Ñ–ê–≤–∏—Ç',
    '–ê–º—Ñ–æ—Ä–∞': '–∞–º—Ñ–û—Ä–∞',
    '–∞–Ω–ê–ª–æ–≥': '–∞–Ω–∞–ª–û–≥',
    '–∞–Ω–ê—Ç–æ–º': '–∞–Ω–∞—Ç–û–º',
    '–∞–Ω–æ–Ω–ò–º': '–∞–Ω–û–Ω–∏–º',
    '–∞–ø–æ–∫–ê–ª–∏–ø—Å–∏—Å': '–∞–ø–æ–∫–∞–ª–ò–ø—Å–∏—Å',
    '–∞—Ä–ê—Ö–∏—Å': '–∞—Ä–∞—Ö–ò—Å',
    '–∞—Ä–ï—Å—Ç': '–ê—Ä–µ—Å—Ç',
    '–∞—Ä–≥—É–º–ï–Ω—Ç': '–∞—Ä–≥–£–º–µ–Ω—Ç',
    '–∞—Å—Å–∏–º–µ—Ç—Ä–ò—è': '–∞—Å—Å–∏–º–ï—Ç—Ä–∏—è',
    '–∞—Å—Ç—Ä–û–ª–æ–≥': '–∞—Å—Ç—Ä–æ–ª–û–≥',
    '–∞—Å—Ç—Ä–æ–Ω–û–º': '–∞—Å—Ç—Ä–û–Ω–æ–º',
    '–∞—Ç–º–æ—Å—Ñ–ï—Ä–∞': '–∞—Ç–º–û—Å—Ñ–µ—Ä–∞',
    '–∞—Ñ–ï—Ä–∞': '–ê—Ñ–µ—Ä–∞',
    '–∞—ç—Ä–æ–ø–û—Ä—Ç—ã': '–∞—ç—Ä–æ–ø–æ—Ä—Ç–´',
    '–±–ê–Ω—Ç—ã': '–±–∞–Ω—Ç–´',
    '–±–û—Ä–æ–¥—É': '–±–æ—Ä–æ–¥–£',
    '–±–£–Ω–≥–∞–ª–æ': '–±—É–Ω–≥–ê–ª–æ',
    '–±–∞–ª–û–≤–∞–Ω–Ω—ã–π': '–±–ê–ª–æ–≤–∞–Ω–Ω—ã–π',
    '–±–∞–ª–£—è—Å—å': '–±–ê–ª—É—è—Å—å',
    '–±–∞–ª–æ–≤–ê—Ç—å': '–±–ê–ª–æ–≤–∞—Ç—å',
    '–±–ª–ê–≥–æ–≤–µ—Å—Ç': '–±–ª–∞–≥–æ–≤–ï—Å—Ç',
    '–±–ª—É–¥–Ω–ò—Ü–∞': '–±–ª–£–¥–Ω–∏—Ü–∞',
    '–±—Ä–∞–ª–ê': '–±—Ä–ê–ª–∞',
    '–±—É—Ö–≥–ê–ª—Ç–µ—Ä–æ–≤': '–±—É—Ö–≥–∞–ª—Ç–µ—Ä–û–≤',
    '–≤–ï—á–µ—Ä—è': '–≤–µ—á–ï—Ä—è',
    '–≤–û–≥–Ω—É—Ç—ã–π': '–≤–æ–≥–Ω–£—Ç—ã–π',
    '–≤–∞–ª–æ–≤–û–π': '–≤–ê–ª–æ–≤–æ–π',
    '–≤–∞–Ω–¥–ê–ª—ã': '–≤–ê–Ω–¥–∞–ª—ã',
    '–≤–¥–æ–≤—Å—Ç–≤–û': '–≤–¥–û–≤—Å—Ç–≤–æ',
    '–≤–µ—Ä–Ω–ê': '–≤–ï—Ä–Ω–∞',
    '–≤–µ—Ä–æ–∏—Å–ø–æ–≤–ï–¥–∞–Ω–∏–µ': '–≤–µ—Ä–æ–∏—Å–ø–æ–≤–µ–¥–ê–Ω–∏–µ',
    '–≤–µ—Ç–µ—Ä–µ–Ω–ê—Ä–∏—è': '–≤–µ—Ç–µ—Ä–µ–Ω–∞—Ä–ò—è',
    '–≤–∑–ê–ø—É—Å–∫–∏': '–≤–∑–∞–ø–£—Å–∫–∏',
    '–≤–∑—è–ª–ê': '–≤–∑–Ø–ª–∞',
    '–≤–∫–ª—é—á–Å–Ω': '–≤–∫–ª–Æ—á—ë–Ω',
    '–≤–∫–ª—é—á–ò–º': '–≤–∫–ª–Æ—á–∏–º',
    '–≤–∫–ª—é—á–ò—Ç': '–≤–∫–ª–Æ—á–∏—Ç',
    '–≤–ª–∏–ª–ê—Å—å': '–≤–ª–ò–ª–∞—Å—å',
    '–≤–æ–¥–æ–ø—Ä–æ–≤–û–¥': '–≤–æ–¥–æ–ø—Ä–û–≤–æ–¥',
    '–≤–æ–∑–¥—É—Ö–æ–ø—Ä–æ–≤–û–¥': '–≤–æ–∑–¥—É—Ö–æ–ø—Ä–û–≤–æ–¥',
    '–≤–æ—Ä–≤–∞–ª–ê—Å—å': '–≤–æ—Ä–≤–ê–ª–∞—Å—å',
    '–≤–æ—Å–ø—Ä–∏–Ω—è–ª–ê': '–≤–æ—Å–ø—Ä–ò–Ω—è–ª–∞',
    '–≤–æ—Å—Å–æ–∑–¥–∞–ª–ê': '–≤–æ—Å—Å–æ–∑–¥–ê–ª–∞',
    '–≤—Ä—É—á–ò—Ç': '–≤—Ä–£—á–∏—Ç',
    '–≤—Ç—Ä–ò–¥–æ—Ä–æ–≥–∞': '–≤—Ç—Ä–∏–¥–û—Ä–æ–≥–∞',
    '–≤—á–∏—Å—Ç–£—é': '–≤—á–ò—Å—Ç—É—é',
    '–≥–ï–Ω–µ–∑–∏—Å': '–≥–µ–Ω–ï–∑–∏—Å',
    '–≥–ï—Ä–±–æ–≤—ã–π': '–≥–µ—Ä–±–û–≤—ã–π',
    '–≥–∞–∑–æ–ø—Ä–æ–≤–û–¥': '–≥–∞–∑–æ–ø—Ä–û–≤–æ–¥',
    '–≥–∞—Å—Ç—Ä–æ–Ω–û–º–∏—è': '–≥–∞—Å—Ç—Ä–æ–Ω–æ–º–ò—è',
    '–≥–µ–≥–µ–º–û–Ω–∏—è': '–≥–µ–≥–µ–º–æ–Ω–ò—è',
    '–≥–Ω–∞–ª–ê': '–≥–Ω–ê–ª–∞',
    '–≥–æ–º–µ–æ–ø–ê—Ç–∏—è': '–≥–æ–º–µ–æ–ø–∞—Ç–ò—è',
    '–≥—Ä–∞–∂–¥–ê–Ω—Å—Ç–≤–æ': '–≥—Ä–ê–∂–¥–∞–Ω—Å—Ç–≤–æ',
    '–≥—Ä–æ—à–û–≤—ã–π': '–≥—Ä–û—à–æ–≤—ã–π',
    '–¥–û–≤–µ—Ä—Ö—É': '–¥–æ–≤–ï—Ä—Ö—É',
    '–¥–û–≥–º–∞—Ç': '–¥–æ–≥–º–ê—Ç',
    '–¥–û–Ω–∏–∑—É': '–¥–æ–Ω–ò–∑—É',
    '–¥–û—Å—É—Ö–∞': '–¥–æ—Å–£—Ö–∞',
    '–¥–û—Å—ã—Ç–∞': '–¥–æ—Å–´—Ç–∞',
    '–¥–∞–≤–Ω–ò—à–Ω–∏–π': '–¥–ê–≤–Ω–∏—à–Ω–∏–π',
    '–¥–µ—Ñ–ò—Å': '–¥–ï—Ñ–∏—Å',
    '–¥–∏–∞–ª–û–≥': '–¥–∏–ê–ª–æ–≥',
    '–¥–∏—Å–ø–∞–Ω—Å–ï—Ä': '–¥–∏—Å–ø–ê–Ω—Å–µ—Ä',
    '–¥–æ–±–µ–ª–ê': '–¥–û–±–µ–ª–∞',
    '–¥–æ–±—Ä–∞–ª–ê': '–¥–æ–±—Ä–ê–ª–∞',
    '–¥–æ–≤–µ–∑–ï–Ω–Ω—ã–π': '–¥–æ–≤–ï–∑–µ–Ω–Ω—ã–π',
    '–¥–æ–≥–æ–≤–û—Ä': '–¥–û–≥–æ–≤–æ—Ä',
    '–¥–æ–≥–æ–≤–æ—Ä–ï–Ω–Ω–æ—Å—Ç—å': '–¥–æ–≥–æ–≤–û—Ä–µ–Ω–Ω–æ—Å—Ç—å',
    '–¥–æ–∂–¥–∞–ª–ê—Å—å': '–¥–æ–∂–¥–ê–ª–∞—Å—å',
    '–¥–æ–∑–ò—Ä–æ–≤–∞—Ç—å': '–¥–æ–∑–∏—Ä–æ–≤–ê—Ç—å',
    '–¥–æ–∑–≤–æ–Ω–ò—Ç—å—Å—è': '–¥–æ–∑–≤–û–Ω–∏—Ç—å—Å—è',
    '–¥–æ–∫—Ä–∞—Å–Ω–ê': '–¥–û–∫—Ä–∞—Å–Ω–∞',
    '–¥–æ–∫—É–º–ï–Ω—Ç': '–¥–æ–∫–£–º–µ–Ω—Ç',
    '–¥–æ–Ω–ï–ª—å–∑—è': '–¥–û–Ω–µ–ª—å–∑—è',
    '–¥–æ—Å–£–≥': '–¥–û—Å—É–≥',
    '–¥—Ä–µ–º–û—Ç–∞': '–¥—Ä–µ–º–æ—Ç–ê',
    '–¥—É—Ö–æ–≤–Ω–ò–∫': '–¥—É—Ö–û–≤–Ω–∏–∫',
    '–µ–≤–ê–Ω–≥–µ–ª–∏–µ': '–µ–≤–∞–Ω–≥–ï–ª–∏–µ',
    '–µ—Ä–µ—Ç–ò–∫': '–µ—Ä–ï—Ç–∏–∫',
    '–∂–∞–ª—é–∑–ò': '–∂–ê–ª—é–∑–∏',
    '–∂–¥–∞–ª–ê': '–∂–¥–ê–ª–∞',
    '–∂–∏–ª–û—Å—å': '–∂–ò–ª–æ—Å—å',
    '–∑–ê–≥–Ω—É—Ç—ã–π': '–∑–∞–≥–Ω–£—Ç—ã–π',
    '–∑–ê–≥–æ–¥—è': '–∑–∞–≥–û–¥—è',
    '–∑–ê–Ω—è–ª': '–∑–∞–Ω–Ø–ª',
    '–∑–ê–Ω—è–ª–æ': '–∑–∞–Ω–Ø–ª–æ',
    '–∑–ê—Å–≤–µ—Ç–ª–æ': '–∑–∞—Å–≤–ï—Ç–ª–æ',
    '–∑–ê—Ç–µ–º–Ω–æ': '–∑–∞—Ç–ï–º–Ω–æ',
    '–∑–∞–≤–ò–¥–Ω–æ': '–∑–ê–≤–∏–¥–Ω–æ',
    '–∑–∞–≤—Å–µ–≥–¥–ê—Ç–∞–π': '–∑–∞–≤—Å–µ–≥–¥–∞—Ç–ê–π',
    '–∑–∞–¥–û–ª–≥–æ': '–∑–ê–¥–æ–ª–≥–æ',
    '–∑–∞–∫–£–ø–æ—Ä–∏–≤': '–∑–∞–∫—É–ø–û—Ä–∏–≤',
    '–∑–∞–Ω—è–ª–ê': '–∑–ê–Ω—è–ª–∞',
    '–∑–∞–Ω—è—Ç–ê': '–∑–ê–Ω—è—Ç–∞',
    '–∑–∞–ø–µ—Ä—Ç–ê': '–∑–ê–ø–µ—Ä—Ç–∞',
    '–∑–∞–ø–ª–æ–º–±–∏—Ä–æ–≤–ê—Ç—å': '–∑–∞–ø–ª–æ–º–±–ò—Ä–æ–≤–∞—Ç—å',
    '–∑–∞—Å–µ–ª–ï–Ω': '–∑–∞—Å–ï–ª–µ–Ω',
    '–∑–≤–∞–ª–ê': '–∑–≤–ê–ª–∞',
    '–∑–≤–æ–Ω–ò—à—å': '–∑–≤–û–Ω–∏—à—å',
    '–∑–∏–º–û–≤—â–∏–∫': '–∑–∏–º–æ–≤—â–ò–∫',
    '–∑–ª–û–±–∞': '–∑–ª–æ–±–ê',
    '–∑–Ω–ê–º–µ–Ω–∏–µ': '–∑–Ω–∞–º–ï–Ω–∏–µ',
    '–∑–Ω–ê—á–∏–º–æ—Å—Ç—å': '–∑–Ω–∞—á–ò–º–æ—Å—Ç—å',
    '–∑—É–±—á–ê—Ç—ã–π': '–∑–£–±—á–∞—Ç—ã–π',
    '–ò–∑–¥–∞–≤–Ω–∞': '–∏–∑–¥–ê–≤–Ω–∞',
    '–ò–∫–æ–Ω–æ–ø–∏—Å—å': '–∏–∫–û–Ω–æ–ø–∏—Å—å',
    '–ò–∫—Å—ã': '–∏–∫—Å–´',
    '–ò—Å–∫–æ—Å–∞': '–∏—Å–∫–û—Å–∞',
    '–ò—Å–∫—Ä–∞': '–∏—Å–∫—Ä–ê',
    '–ò—Å—Å—Ç–∞—Ä–∏': '–∏—Å—Å—Ç–ê—Ä–∏',
    '–∏–≥–£–º–µ–Ω': '–ò–≥—É–º–µ–Ω',
    '–∏–¥–µ–û–ª–æ–≥': '–∏–¥–µ–æ–ª–û–≥',
    '–∏–∑–û–≥–Ω—É—Ç—ã': '–∏–∑–æ–≥–Ω–£—Ç—ã–π',
    '–∏–∑–±–∞–ª–û–≤–∞–Ω': '–∏–∑–±–ê–ª–æ–≤–∞–Ω',
    '–∏–∑–±–∞–ª–æ–≤–ê—Ç—å': '–∏–∑–±–ê–ª–æ–≤–∞—Ç—å',
    '–∏–∑–¥—Ä–ï–≤–ª–µ': '–ò–∑–¥—Ä–µ–≤–ª–µ',
    '–∏–Ω—Å–£–ª—å—Ç': '–ò–Ω—Å—É–ª—å—Ç',
    '–∏—Å–∫–ª—é—á–ò—Ç': '–∏—Å–∫–ª–Æ—á–∏—Ç',
    '–∏—Å–∫—Ä–∏–≤–ò—Ç—å—Å—è': '–∏—Å–∫—Ä–ò–≤–∏—Ç—Å—å—è',
    '–∏—Å—á–ï—Ä–ø–∞—Ç—å': '–∏—Å—á–µ—Ä–ø–ê—Ç—å',
        }
        self.mistakes = []
        self.correct_list = list(self.words.keys())

    def endless_game(self):
        self.correct_list = list(self.words.keys())
        streak = 0
        while True:
            if not self.correct_list:
                print(f"\n –ü–û–ó–î–†–ê–í–õ–Ø–Æ! –°–ª–æ–≤–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å...")
                print(f"üî• –í–∞—à —Ä–µ–∫–æ—Ä–¥: {streak} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–¥—Ä—è–¥!")
                input("–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
                return

            screen.header('–¢–†–ï–ù–ê–ñ–ï–† –£–î–ê–†–ï–ù–ò–ô')
            print(f"(—Å–µ—Ä–∏—è: {streak} )".center(30))


            correct = random.choice(self.correct_list)
            incorrect = self.words[correct]
            self.correct_list.remove(correct)

            options = [correct, incorrect]
            random.shuffle(options)

            print('–ß—Ç–æ –≤–µ—Ä–Ω–æ?')
            print(f'1. {options[0]}')
            print(f'2. {options[1]}')

            answer = 1 if options[0] == correct else 2

            try:
                user_choice = int(input('> '))
                if user_choice not in (1, 2):
                    raise InvalidChoiceError
            except ValueError:
                print('–û–®–ò–ë–ö–ê: –í–í–ï–î–ò–¢–ï 1 –ò–õ–ò 2')
                continue
            except InvalidChoiceError:
                print('–û–®–ò–ë–ö–ê: –í–í–ï–î–ò–¢–ï 1 –ò–õ–ò 2')
                continue

            if user_choice == answer:
                streak += 1
            else:
                self.mistakes.append([correct, incorrect])
                print(f"\n‚ùå –ù–µ–≤–µ—Ä–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct}")
                print(f"üî• –í–∞—à —Ä–µ–∫–æ—Ä–¥: {streak} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–¥—Ä—è–¥!")
                input("–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
                return

    def error_work(self):
        while True:
            cnt = len(self.mistakes)
            screen.header('–†–ê–ë–û–¢–ê –ù–ê–î –û–®–ò–ë–ö–ê–ú–ò')
            print(f"(–∫–æ–ª-–≤–æ —Å–ª–æ–≤: {cnt} )".center(30))
            if not self.mistakes:
                print('\n–£ –≤–∞—Å –Ω–µ—Ç –æ—à–∏–±–æ–∫!')
                input("–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
                return

            correct, incorrect = random.choice(self.mistakes)
            options = [correct, incorrect]
            random.shuffle(options)

            print('–ß—Ç–æ –≤–µ—Ä–Ω–æ?')
            print(f'1. {options[0]}')
            print(f'2. {options[1]}')

            answer = 1 if options[0] == correct else 2

            try:
                user_choice = int(input('–í–í–û–î: '))
                if user_choice not in (1, 2):
                    raise InvalidChoiceError
            except ValueError:
                print('–û–®–ò–ë–ö–ê: –í–í–ï–î–ò–¢–ï 1 –ò–õ–ò 2')
                continue
            except InvalidChoiceError:
                print('–û–®–ò–ë–ö–ê: –í–í–ï–î–ò–¢–ï 1 –ò–õ–ò 2')
                continue

            if user_choice == answer:
                self.mistakes.remove([correct,incorrect])
            else:
                print(f"\n‚ùå –ù–µ–≤–µ—Ä–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct}")
                input("–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
                return

    def time_game(self):
        screen.header('–ù–ê –í–†–ï–ú–Ø')
        try:
            time_limit = int(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ —Å–µ–∫—É–Ω–¥: '))
        except ValueError:
            print('–í–í–ï–î–ò–¢–ï –ß–ò–°–õ–û!')
            input("–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
            return
        screen.footer()
        self.correct_list = list(self.words.keys())
        streak = 0
        lose = 0
        start_time = time.time()
        while True:
            elapsed = time.time() - start_time
            remaining = time_limit - elapsed
            if elapsed > time_limit:
                print(f"\n –í–†–ï–ú–Ø –í–´–®–õ–û!")
                print(f"üî• –°—á–µ—Ç: {streak} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤, {lose} –æ—à–∏–±–æ–∫!")
                input("–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
                return
            if not self.correct_list:
                print(f"\n –ü–û–ó–î–†–ê–í–õ–Ø–Æ! –°–ª–æ–≤–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å...")
                print(f"üî• –°—á–µ—Ç: {streak} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤, {lose} –æ—à–∏–±–æ–∫!")
                input("–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
                return

            screen.header(f'–û–°–¢–ê–õ–û–°–¨ {int(remaining)} –°–ï–ö–£–ù–î')
            print(f"({streak} –≤–µ—Ä–Ω–æ, {lose} –æ—à–∏–±–æ–∫)".center(30))

            correct = random.choice(self.correct_list)
            incorrect = self.words[correct]
            self.correct_list.remove(correct)

            options = [correct, incorrect]
            random.shuffle(options)

            print('–ß—Ç–æ –≤–µ—Ä–Ω–æ?')
            print(f'1. {options[0]}')
            print(f'2. {options[1]}')

            answer = 1 if options[0] == correct else 2


            try:
                user_choice = int(input('> '))
                if user_choice not in (1, 2):
                    raise InvalidChoiceError
            except ValueError:
                print('–û–®–ò–ë–ö–ê: –í–í–ï–î–ò–¢–ï 1 –ò–õ–ò 2')
                continue
            except InvalidChoiceError:
                print('–û–®–ò–ë–ö–ê: –í–í–ï–î–ò–¢–ï 1 –ò–õ–ò 2')
                continue

            if user_choice == answer:
                streak += 1
            else:
                self.mistakes.append([correct, incorrect])
                lose += 1


if __name__ == '__main__':
    game = menu()
    game.menu()
